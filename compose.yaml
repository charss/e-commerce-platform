services:
  psql:
    image: postgres:14-alpine
    container_name: psql
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ecom_platform
    volumes:
      - psql-ecom-pltfrm:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    mem_limit: 300m
    restart: always
  user-svc:
    build: ./user-svc
    ports:
      - "8001:8001"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  product-svc:
    build: ./product-svc
    ports:
      - "8002:8002"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  shopping-cart-svc:
    build: ./shopping-cart-svc
    ports:
      - "8003:8003"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  order-svc:
    build: ./order-svc
    ports:
      - "8004:8004"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  notification-svc:
    build: ./notification-svc
    ports:
      - "8005:8005"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  payment-svc:
    build: ./payment-svc
    ports:
      - "8006:8006"
    depends_on:
      - psql
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/app/config/
  seed:
    image: postgres:14-alpine
    container_name: seed
    depends_on: 
      - user-svc
      - product-svc
      - shopping-cart-svc
      - order-svc
      - notification-svc
      - payment-svc
    environment: 
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      PGPASSWORD: ${DB_PASSWORD}
    volumes: 
      - ./seed-template.sql:/seed.sql:ro
    entrypoint: >
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...';
        until pg_isready -h psql -p 5432 -U $${DB_USERNAME}; do sleep 2; done;

        echo 'Waiting for Java app migrations to finish...';
        until psql -h psql -U $${DB_USERNAME} -d ecom_platform -tAc \"SELECT 1 FROM information_schema.tables WHERE table_schema='notification' AND table_name='template';\" | grep -q 1; do
          echo 'Schema not ready, retrying...';
          sleep 2;
        done;

        echo 'Schema ready, running seed...';
        psql -h psql -U $${DB_USERNAME} -d ecom_platform -f /seed.sql;
        echo 'Seed complete';
      "
    restart: "no"

volumes:
  psql-ecom-pltfrm:
    
